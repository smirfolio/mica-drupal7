<?php
/**
 * Copyright (c) 2016 OBiBa. All rights reserved.
 *
 * This program and the accompanying materials
 * are made available under the terms of the GNU Public License v3.0.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * @file
 * Obiba Mica Graphic file
 */

/**
 * Implements hook_menu().
 */
function obiba_mica_graphic_menu() {
  $items = array();

  $items['admin/config/obiba-mica/obiba_mica_graphic'] = array(
    'title' => 'Statistics Graphic',
    'description' => 'Configure settings for Obiba Mica Graphic.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('obiba_mica_graphic_settings_form'),
    'access arguments' => array('administer obiba mica graphic'),
    'file' => 'obiba_mica_graphic.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_theme().
 *
 * copy '<modules>/obiba_mica_network/templates/'   files in  your customized
 * theme  '<YOUR_THEME>/templates/' path you can modify default display of
 * listed page templates by rearrange block field for example don't forget to
 * clear the theme registry.
 *
 */
function obiba_mica_graphic_theme($existing, $type, $theme, $path) {
  $path_theme = $path . '/templates';
  $path_views_theme = $path . '/js/app/views';
  return array(
    'obiba_mica_angular_app_charts_' . NetworkStatistics::GEO_NBR_STAT => array(
      'template' => 'obiba_mica_angular_app_charts_' . NetworkStatistics::GEO_NBR_STAT,
      'path' => $path_theme
    ),
    'obiba_mica_angular_app_charts_' . NetworkStatistics::METHODS_DESIGNS => array(
      'template' => 'obiba_mica_angular_app_charts_' . NetworkStatistics::METHODS_DESIGNS,
      'path' => $path_theme
    ),
    'obiba_mica_angular_app_charts_' . NetworkStatistics::NUMBER_PARTICIPANTS => array(
      'template' => 'obiba_mica_angular_app_charts_' . NetworkStatistics::NUMBER_PARTICIPANTS,
      'path' => $path_theme
    ),
    'obiba_mica_angular_app_charts_' . NetworkStatistics::BIO_SAMPLES => array(
      'template' => 'obiba_mica_angular_app_charts_' . NetworkStatistics::BIO_SAMPLES,
      'path' => $path_theme
    ),
    'graphic-main' => array(
      'template' => 'graphic-main',
      'path' => $path_views_theme
    ),
    'graphic-chart-container' => array(
      'template' => 'graphic-chart-container',
      'path' => $path_views_theme
    ),

    'graphic-chart-block-container' => array(
      'template' => 'graphic-chart-block-container',
      'path' => $path_views_theme
    ),
  );
}

/**
 * Default blocks definition
 */
function obiba_mica_graphic_default_block() {
  $graphics_blocks_aggregations = variable_get_value('graphics_blocks_aggregations');
  return array(
    NetworkStatistics::GEO_NBR_STAT => array(
      'info' => t('Geographical distribution for studies'),
      'region' => 'content',
      'visibility' => BLOCK_VISIBILITY_LISTED,
      'pages' => '<front>',
      'weight' => -13,
    ),
    NetworkStatistics::METHODS_DESIGNS => array(
      'info' => t('Study design'),
      'region' => 'content',
      'visibility' => BLOCK_VISIBILITY_LISTED,
      'pages' => '<front>',
      'weight' => -12,
    ),
    NetworkStatistics::NUMBER_PARTICIPANTS => array(
      'info' => t('Number of Participants'),
      'region' => 'content',
      'visibility' => BLOCK_VISIBILITY_LISTED,
      'pages' => '<front>',
      'weight' => -11,
    ),
    NetworkStatistics::BIO_SAMPLES =>
      array(
        'info' => t('Biological Samples'),
        'region' => 'content',
        'visibility' => BLOCK_VISIBILITY_LISTED,
        'pages' => '<front>',
        'weight' => -10,
      ),
  );
}

/**
 * Implements hook_block_info().
 */
function obiba_mica_graphic_block_info() {
  return obiba_mica_graphic_default_block();
}

function obiba_mica_graphic_preprocess_block(&$variables) {
  if ($variables['block']->module == 'obiba_mica_graphic') {
    switch ($variables['block']->delta) {
      case NetworkStatistics::GEO_NBR_STAT:
      case NetworkStatistics::METHODS_DESIGNS :
      case NetworkStatistics::NUMBER_PARTICIPANTS :
      case NetworkStatistics::BIO_SAMPLES :
        $graphics_blocks_aggregations = variable_get_value('graphics_blocks_aggregations');
        $variables['classes_array'][] = drupal_html_class($graphics_blocks_aggregations[$variables['block']->delta]['value_name']);
    }
  }

}


/**
 * Implements hook_block_view().
 */
function obiba_mica_graphic_block_view($delta = '') {
  $block = array();
  $aggregations_to_show = variable_get_value('graphics_blocks_aggregations');
  $block_delta_parameters = NetworkStatistics::deltaAggregationsMap();
  if ((!empty($aggregations_to_show) && $aggregations_to_show !== 'none')) {
    if ($delta == NetworkStatistics::GEO_NBR_STAT ||
      $delta == NetworkStatistics::METHODS_DESIGNS ||
      $delta == NetworkStatistics::NUMBER_PARTICIPANTS ||
      $delta == NetworkStatistics::BIO_SAMPLES
    ) {
      obiba_mica_app_angular_load_js_resources('obiba_mica_graphic');
    }
    $graphics_bocks = variable_get_value('graphics_blocks');
    $colors_options = obiba_mica_graphic_charts_colors_options_settings();
    $study_design_options = obiba_mica_graphic_study_design_options($colors_options);
    $number_participants_options = obiba_mica_graphic_number_participants_options($colors_options);
    $bio_samples_options = obiba_mica_graphic_bio_samples_options($colors_options);
    switch ($delta) {
      case NetworkStatistics::GEO_NBR_STAT:
        if (!empty($aggregations_to_show) && $aggregations_to_show[NetworkStatistics::GEO_NBR_STAT]['enable'] !== 0) {
          if (!empty($graphics_bocks)) {
            $block['content'] = theme('obiba_mica_angular_app_charts_' . NetworkStatistics::GEO_NBR_STAT);
            drupal_add_js(array(
              'GraphicChartsOptions' =>
                array(
                  'entityType' => 'network',
                  'entityIds' => implode(',', variable_get_value('graphics_blocks_networks')),
                  'ChartsOptions' => obiba_mica_graphic_charts_options_settings('geoChartOptions',
                    array('graphics.country', 'graphics.nbr-studies'),
                    'graphics.geo-chart-title',
                    $colors_options)
                ),
            ),
              'setting');
          }
        }
        break;

      case NetworkStatistics::METHODS_DESIGNS:
        if (!empty($aggregations_to_show) && $aggregations_to_show[NetworkStatistics::METHODS_DESIGNS]['enable'] !== 0) {
          if (!empty($graphics_bocks)) {
            $block['content'] = theme('obiba_mica_angular_app_charts_' . NetworkStatistics::METHODS_DESIGNS);
            drupal_add_js(array(
              'GraphicChartsOptions' =>
                array(
                  'entityType' => 'network',
                  'entityIds' => implode(',', variable_get_value('graphics_blocks_networks')),
                  'ChartsOptions' => obiba_mica_graphic_charts_options_settings('studiesDesigns',
                    array(
                      'graphics.study-design',
                      'graphics.nbr-studies',
                      'graphics.number-participants'
                    ),
                    'graphics.study-design-chart-title', $study_design_options),
                ),
            ),
              'setting');
          }
        }
        break;

      case NetworkStatistics::NUMBER_PARTICIPANTS:
        if (!empty($aggregations_to_show) && $aggregations_to_show[NetworkStatistics::NUMBER_PARTICIPANTS]['enable'] !== 0) {
          if (!empty($graphics_bocks)) {
            $block['content'] = theme('obiba_mica_angular_app_charts_' . NetworkStatistics::NUMBER_PARTICIPANTS);
            drupal_add_js(array(
              'GraphicChartsOptions' =>
                array(
                  'entityType' => 'network',
                  'entityIds' => implode(',', variable_get_value('graphics_blocks_networks')),
                  'ChartsOptions' => obiba_mica_graphic_charts_options_settings('numberParticipants',
                    array(
                      'graphics.number-participants',
                      'graphics.nbr-studies'
                    ),
                    'graphics.number-participants-chart-title', $number_participants_options),
                ),
            ),
              'setting');
          }
        }
        break;

      case NetworkStatistics::BIO_SAMPLES:
        if (!empty($aggregations_to_show) && $aggregations_to_show[NetworkStatistics::BIO_SAMPLES]['enable'] !== 0) {
          if (!empty($graphics_bocks)) {
            $block['content'] = theme('obiba_mica_angular_app_charts_' . NetworkStatistics::BIO_SAMPLES);
            drupal_add_js(array(
              'GraphicChartsOptions' =>
                array(
                  'entityType' => 'network',
                  'entityIds' => implode(',', variable_get_value('graphics_blocks_networks')),
                  'ChartsOptions' => obiba_mica_graphic_charts_options_settings('biologicalSamples',
                    array('graphics.bio-samples', 'graphics.nbr-studies'),
                    'graphics.bio-samples-chart-title',
                    $bio_samples_options),
                ),
            ),
              'setting');
          }
        }
        break;
    }
    return $block;

  }
}

/**
 * Implements hook_get_js().
 */
function obiba_mica_graphic_get_js($weight_js) {
  $module_path = drupal_get_path('module', 'obiba_mica_graphic');
  $js = file_scan_directory($module_path . '/js/app', '/.*\.js$/', array('key' => 'name'));
  ksort($js);
  foreach ($js as $file_js) {
    drupal_add_js($file_js->uri, array(
      'type' => 'file',
      'scope' => 'footer',
      'weight' => ++$weight_js
    ));
  }
  return $weight_js;
}

/**
 * Implements hook_get_ng_module_to_load().
 */
function obiba_mica_graphic_get_ng_module_to_load() {
  return 'mica.ObibaGraphicCharts';
}

/**
 * Set Pie charts graphics options
 */
function obiba_mica_graphic_charts_options_settings($aggregation_option, $headers_label, $title_chart, $custom_options = NULL) {
  $default_options = array(
    'options' => array(),
  );
  $options = array(
    $aggregation_option => array(
      'header' => $headers_label,
      'title' => $title_chart,
    ),
  );
  if (!empty($custom_options)) {
    $options_result = array_merge_recursive($default_options['options'], $custom_options);
    $options[$aggregation_option]['options'] = $options_result;
  }
  return $options;
}


/**
 * Get Local charts Options.
 *
 * @param $graphics_options .
 *
 * @return array.
 */
function obiba_mica_graphic_local_graphics_options($graphics_options = NULL) {
  $colors_options = obiba_mica_graphic_charts_colors_options_settings();
  $study_design_options = obiba_mica_graphic_study_design_options($colors_options);
  $number_participants_options = obiba_mica_graphic_number_participants_options($colors_options);
  $bio_samples_options = obiba_mica_graphic_bio_samples_options($colors_options);
  $charts_option = array_merge(
    obiba_mica_graphic_charts_options_settings('geoChartOptions',
      array('graphics.country', 'graphics.nbr-studies'),
      'graphics.geo-chart-title', $colors_options),
    obiba_mica_graphic_charts_options_settings('studiesDesigns',
      array(
        'graphics.study-design',
        'graphics.nbr-studies',
        'graphics.number-participants'
      ),
      'graphics.study-design-chart-title', $study_design_options),
    obiba_mica_graphic_charts_options_settings('biologicalSamples',
      array('graphics.bio-samples', 'graphics.nbr-studies'),
      'graphics.bio-samples-chart-title',
      $bio_samples_options),
    obiba_mica_graphic_charts_options_settings('numberParticipants',
      array(
        'graphics.number-participants',
        'graphics.nbr-studies'
      ),
      'graphics.number-participants-chart-title', $number_participants_options)
  );

  if (!empty($graphics_options)) {
    $Graphic_charts_options = array_merge($graphics_options, array(
      'ChartsOptions' => !empty($charts_option) ? $charts_option : NULL
    ));
  }
  else {
    $Graphic_charts_options = array(
      'ChartsOptions' => !empty($charts_option) ? $charts_option : NULL
    );
  }
  drupal_add_js(array(
    'GraphicChartsOptions' => $Graphic_charts_options
  ),
    'setting');

}

/**
 * Get Study designs Option.
 * @param $colors_options.
 *
 * @return array $options.
 */
function obiba_mica_graphic_study_design_options($colors_options = NULL) {
  return !empty($colors_options) ?
    array_merge(array(
      'bars' => 'horizontal',
      'series' => array(
        0 => array('axis' => 'nbrStudies'),
        1 => array('axis' => 'nbrParticipants'),
      ),
      'axes' => array(
        'x' => array(
          'nbrStudies' => array(
            'side' => 'top',
            'label' => t('Number of Studies')
          ),
          'nbrParticipants' => array('label' => t('Number of Participants'))
        )
      ),
      'legend' => array('position' => 'none')
    ), $colors_options) :
    array(
      'bars' => 'horizontal',
      'series' => array(
        0 => array('axis' => 'nbrStudies'),
        1 => array('axis' => 'nbrParticipants'),
      ),
      'axes' => array(
        'x' => array(
          'nbrStudies' => array(
            'side' => 'bottom',
            'label' => t('Number of Studies')
          ),
          'nbrParticipants' => array('label' => t('Number of Participants'))
        )
      ),
      'legend' => array('position' => 'none')
    );
}

/**
 * Get Number Of participant options.
 * @param $colors_options.
 *
 * @return array $options.
 */
function obiba_mica_graphic_number_participants_options($colors_options = NULL) {
  return !empty($colors_options) ?
    array_merge(array(
      'legendPosition' => 'right'
    ), $colors_options) :
    array(
    );
}

/**
 * Get bui samples options.
 * @param $colors_options.
 *
 * @return array $options.
 */
function obiba_mica_graphic_bio_samples_options($colors_options = NULL) {
  return !empty($colors_options) ?
    array_merge(array(
      'legend' => array('position' => 'none')
    ), $colors_options) :
    array(
      'legend' => array('position' => 'none'),
      'xAxis' => array('ticks' => 0)
    );
}

/**
 * Get default colors options
 */
function obiba_mica_graphic_charts_colors_options_settings() {
  $options_colors = array();
  $colors = variable_get_value('mica_graphic_colors');
  if (empty($colors) || $colors == 'none') {
    return NULL;
  }
  $colors_setting = array_filter($colors, function ($color) {
    return !empty($color['enable']);
  });
  uasort($colors_setting, '_obiba_mica_graphic_colors_options_array_sort');
  foreach ($colors_setting as $nbr => $color) {
    $options_colors[] = $color['value_name'];
  }
  if (!empty($options_colors)) {
    return array('colors' => $options_colors);
  }
}


/**
 * Custom array sort function by weight to display the taxonomies widget items
 * in correct order.
 *
 * @param $a
 * @param $b
 * @return int
 */
function _obiba_mica_graphic_colors_options_array_sort($a, $b) {
  if (isset($a['weight']) && isset($b['weight'])) {
    return $a['weight'] < $b['weight'] ? -1 : 1;
  }
  return 0;
}

function obiba_mica_graphics_do_coverage_query($query) {
  $search_resources = new ObibaSearchResources();
  $coverages = $search_resources->taxonomiesCoverageRql($query, 'variables', 'coverage');
  return $coverages;
}

function obiba_mica_graphics_nvd3_query_charts($query, $entity_id) {
  $cached_chart = obiba_mica_commons_get_cache(__FUNCTION__ . $query);
  if(!empty($cached_chart)){
      $response = $cached_chart;
  }
  else{
  $response = new stdClass();
  $response->charts = array();

  $coverages = obiba_mica_graphics_do_coverage_query($query);
  $base_path = !empty($GLOBALS['conf']['clean_url']) ? base_path() : base_path().'?q=';
  if (isset($coverages->taxonomies)) {
    $taxonomises_config = obiba_mica_commons_taxonomies_filter_array('mica_taxonomy_figures');
    $shown = array();

    foreach($taxonomises_config as $taxonomy_config) {
      foreach ($coverages->taxonomies as $covarage){
        if($taxonomy_config === $covarage->taxonomy->name){
          $shown[]= $covarage;
        }
      }
    };

    $filtered = array_filter($shown, function ($coverage) { return isset($coverage->hits) && $coverage->hits > 0; });

    foreach ($filtered as $coverage) {

      $data = array();
      $variable_data = array();
      foreach ($coverage->vocabularies as $vocabulary) {

        if (!empty($vocabulary->buckets)) {
          foreach ($vocabulary->buckets as $bucket) {
            $item = new stdClass();
            $item->key = $bucket->value;
            $item->value = $bucket->hits;
            $item->title = obiba_mica_commons_get_localized_field($vocabulary->vocabulary, 'titles');
            $item->link = $base_path . MicaClientPathProvider::REPOSITORY_SEARCH . '#/search?query=' . ObibaSearchResources::chartQueryBuilders(NULL, $bucket, $coverage->taxonomy->name, $vocabulary->vocabulary->name, array_map(function ($terms) { return $terms->term->name; }, $vocabulary->terms), $entity_id);
            array_push($data, $item);
          }
        } else {
          $item = new stdClass();
          $item->key = t('Variables');
          $item->value = $vocabulary->count;
          $item->title = obiba_mica_commons_get_localized_field($vocabulary->vocabulary, 'titles');
          $item->link = $base_path . MicaClientPathProvider::REPOSITORY_SEARCH . '#/search?query=' . ObibaSearchResources::chartQueryBuilders($query, NULL, $coverage->taxonomy->name, $vocabulary->vocabulary->name, array_map(function ($terms) { return $terms->term->name; }, $vocabulary->terms), $entity_id);
          array_push($variable_data, $item);
        }
      }

      $chart = array(
        'title' => obiba_mica_commons_get_localized_field($coverage->taxonomy, 'titles'),
        'subtitle' => obiba_mica_commons_get_localized_field($coverage->taxonomy, 'descriptions'),
        'data' => $data,
        'variableData' => $variable_data,
        'color' => obiba_mica_graphic_charts_colors_options_settings(),
      );

      array_push($response->charts, $chart);
        }
    }
    obiba_mica_commons_set_cache(__FUNCTION__ . $query, $response);
  }

  return drupal_json_output($response);
}
